{"version":3,"sources":["../../../src/overlays/canvas-overlay.js"],"names":["createElement","PropTypes","BaseControl","window","propTypes","Object","assign","redraw","func","isRequired","defaultProps","captureScroll","captureDrag","captureClick","captureDoubleClick","CanvasOverlay","ctx","_ctx","pixelRatio","devicePixelRatio","save","scale","_context","viewport","isDragging","props","width","height","project","bind","unproject","restore","componentDidMount","canvas","_containerRef","current","_canvas","getContext","_redraw","_render","ref","style","position","left","top"],"mappings":";AAqBA,SAAQA,aAAR,QAA4B,OAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,SAAQC,MAAR,QAAqB,kBAArB;AAIA,MAAMC,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,WAAW,CAACE,SAA9B,EAAyC;AACzDG,EAAAA,MAAM,EAAEN,SAAS,CAACO,IAAV,CAAeC;AADkC,CAAzC,CAAlB;AAIA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,aAAa,EAAE,KADI;AAEnBC,EAAAA,WAAW,EAAE,KAFM;AAGnBC,EAAAA,YAAY,EAAE,KAHK;AAInBC,EAAAA,kBAAkB,EAAE;AAJD,CAArB;AAWA,eAAe,MAAMC,aAAN,SAA4Bb,WAA5B,CAAkF;AAAA;AAAA;;AAAA;;AAAA;;AAAA,qCAgBrF,MAAM;AACd,YAAMc,GAAG,GAAG,KAAKC,IAAjB;;AACA,UAAI,CAACD,GAAL,EAAU;AACR;AACD;;AAED,YAAME,UAAU,GAAGf,MAAM,CAACgB,gBAAP,IAA2B,CAA9C;AACAH,MAAAA,GAAG,CAACI,IAAJ;AACAJ,MAAAA,GAAG,CAACK,KAAJ,CAAUH,UAAV,EAAsBA,UAAtB;AARc,6BAUiB,KAAKI,QAVtB;AAAA,YAUPC,QAVO,kBAUPA,QAVO;AAAA,YAUGC,UAVH,kBAUGA,UAVH;AAWd,WAAKC,KAAL,CAAWlB,MAAX,CAAkB;AAChBmB,QAAAA,KAAK,EAAEH,QAAQ,CAACG,KADA;AAEhBC,QAAAA,MAAM,EAAEJ,QAAQ,CAACI,MAFD;AAGhBX,QAAAA,GAHgB;AAIhBQ,QAAAA,UAJgB;AAKhBI,QAAAA,OAAO,EAAEL,QAAQ,CAACK,OAAT,CAAiBC,IAAjB,CAAsBN,QAAtB,CALO;AAMhBO,QAAAA,SAAS,EAAEP,QAAQ,CAACO,SAAT,CAAmBD,IAAnB,CAAwBN,QAAxB;AANK,OAAlB;AASAP,MAAAA,GAAG,CAACe,OAAJ;AACD,KArC8F;AAAA;;AAO/FC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,MAAM,GAAG,KAAKC,aAAL,CAAmBC,OAAlC;;AACA,QAAIF,MAAJ,EAAY;AACV,WAAKG,OAAL,GAAeH,MAAf;AACA,WAAKhB,IAAL,GAAYgB,MAAM,CAACI,UAAP,CAAkB,IAAlB,CAAZ;AACD;;AACD,SAAKC,OAAL;AACD;;AAyBDC,EAAAA,OAAO,GAAG;AACR,UAAMrB,UAAU,GAAGf,MAAM,CAACgB,gBAAP,IAA2B,CAA9C;AADQ,kCAIJ,KAAKG,QAJD,CAGNC,QAHM;AAAA,UAGKG,KAHL,yBAGKA,KAHL;AAAA,UAGYC,MAHZ,yBAGYA,MAHZ;;AAKR,SAAKW,OAAL;;AAEA,WAAOtC,aAAa,CAAC,QAAD,EAAW;AAC7BwC,MAAAA,GAAG,EAAE,KAAKN,aADmB;AAE7BR,MAAAA,KAAK,EAAEA,KAAK,GAAGR,UAFc;AAG7BS,MAAAA,MAAM,EAAEA,MAAM,GAAGT,UAHY;AAI7BuB,MAAAA,KAAK,EAAE;AACLf,QAAAA,KAAK,YAAKA,KAAL,OADA;AAELC,QAAAA,MAAM,YAAKA,MAAL,OAFD;AAGLe,QAAAA,QAAQ,EAAE,UAHL;AAILC,QAAAA,IAAI,EAAE,CAJD;AAKLC,QAAAA,GAAG,EAAE;AALA;AAJsB,KAAX,CAApB;AAYD;;AA1D8F;;gBAA5E7B,a,eACAX,S;;gBADAW,a,kBAEGL,Y","sourcesContent":["// @flow\n// Copyright (c) 2015 Uber Technologies, Inc.\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {createElement} from 'react';\nimport PropTypes from 'prop-types';\nimport BaseControl from '../components/base-control';\nimport {window} from '../utils/globals';\n\nimport type {BaseControlProps} from '../components/base-control';\n\nconst propTypes = Object.assign({}, BaseControl.propTypes, {\n  redraw: PropTypes.func.isRequired\n});\n\nconst defaultProps = {\n  captureScroll: false,\n  captureDrag: false,\n  captureClick: false,\n  captureDoubleClick: false\n};\n\nexport type CanvasOverlayProps = BaseControlProps & {\n  redraw: Function\n};\n\nexport default class CanvasOverlay extends BaseControl<CanvasOverlayProps, *, HTMLCanvasElement> {\n  static propTypes = propTypes;\n  static defaultProps = defaultProps;\n\n  _canvas: ?HTMLCanvasElement;\n  _ctx: any;\n\n  componentDidMount() {\n    const canvas = this._containerRef.current;\n    if (canvas) {\n      this._canvas = canvas;\n      this._ctx = canvas.getContext('2d');\n    }\n    this._redraw();\n  }\n\n  _redraw = () => {\n    const ctx = this._ctx;\n    if (!ctx) {\n      return;\n    }\n\n    const pixelRatio = window.devicePixelRatio || 1;\n    ctx.save();\n    ctx.scale(pixelRatio, pixelRatio);\n\n    const {viewport, isDragging} = this._context;\n    this.props.redraw({\n      width: viewport.width,\n      height: viewport.height,\n      ctx,\n      isDragging,\n      project: viewport.project.bind(viewport),\n      unproject: viewport.unproject.bind(viewport)\n    });\n\n    ctx.restore();\n  };\n\n  _render() {\n    const pixelRatio = window.devicePixelRatio || 1;\n    const {\n      viewport: {width, height}\n    } = this._context;\n    this._redraw();\n\n    return createElement('canvas', {\n      ref: this._containerRef,\n      width: width * pixelRatio,\n      height: height * pixelRatio,\n      style: {\n        width: `${width}px`,\n        height: `${height}px`,\n        position: 'absolute',\n        left: 0,\n        top: 0\n      }\n    });\n  }\n}\n"],"file":"canvas-overlay.js"}