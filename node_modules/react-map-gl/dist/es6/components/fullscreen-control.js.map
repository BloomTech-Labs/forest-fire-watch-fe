{"version":3,"sources":["../../../src/components/fullscreen-control.js"],"names":["document","PropTypes","BaseControl","createElement","mapboxgl","propTypes","Object","assign","className","string","container","object","defaultProps","FullscreenControl","isFullscreen","showButton","nextState","_mapboxFullscreenControl","_fullscreen","setState","_onClickFullscreen","componentDidMount","props","_context","mapContainer","_checkFullscreenSupport","addEventListener","_fullscreenchange","_onFullscreenChange","componentWillUnmount","removeEventListener","_renderButton","type","label","callback","key","title","onClick","_render","state","ref","_containerRef"],"mappings":"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","sourcesContent":["// @flow\n\n// Copyright (c) 2015 Uber Technologies, Inc.\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {document} from '../utils/globals';\nimport PropTypes from 'prop-types';\nimport BaseControl from './base-control';\nimport {createElement} from 'react';\nimport mapboxgl from '../utils/mapboxgl';\n\nimport type {BaseControlProps} from './base-control';\n\nconst propTypes = Object.assign({}, BaseControl.propTypes, {\n  // Custom className\n  className: PropTypes.string,\n  /* eslint-disable max-len */\n  // `container` is the [compatible DOM element](https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullScreen#Compatible_elements)\n  // which should be made full screen. By default, the map container element will be made full screen.\n  /* eslint-enable max-len */\n  container: PropTypes.object\n});\n\nconst defaultProps = Object.assign({}, BaseControl.defaultProps, {\n  className: '',\n  container: null\n});\n\nexport type FullscreenControlProps = BaseControlProps & {\n  className: string,\n  container: ?HTMLElement\n};\n\ntype State = {\n  isFullscreen: boolean,\n  showButton: boolean\n};\n\nexport default class FullscreenControl extends BaseControl<\n  FullscreenControlProps,\n  State,\n  HTMLDivElement\n> {\n  static propTypes = propTypes;\n  static defaultProps = defaultProps;\n\n  state = {\n    isFullscreen: false,\n    showButton: false\n  };\n\n  _mapboxFullscreenControl: any = null;\n\n  componentDidMount() {\n    const container = this.props.container || this._context.mapContainer;\n\n    this._mapboxFullscreenControl = new mapboxgl.FullscreenControl({\n      container\n    });\n\n    // eslint-disable-next-line\n    this.setState({\n      showButton: this._mapboxFullscreenControl._checkFullscreenSupport()\n    });\n\n    document.addEventListener(\n      this._mapboxFullscreenControl._fullscreenchange,\n      this._onFullscreenChange\n    );\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\n      this._mapboxFullscreenControl._fullscreenchange,\n      this._onFullscreenChange\n    );\n  }\n\n  _onFullscreenChange = () => {\n    const nextState = !this._mapboxFullscreenControl._fullscreen;\n    // this is a hack\n    // Mapbox use `_fullscreen` flag to toggle fullscreen mode\n    this._mapboxFullscreenControl._fullscreen = nextState;\n    this.setState({isFullscreen: nextState});\n  };\n\n  _onClickFullscreen = () => {\n    this._mapboxFullscreenControl._onClickFullscreen();\n  };\n\n  _renderButton(type: string, label: string, callback: Function) {\n    return createElement('button', {\n      key: type,\n      className: `mapboxgl-ctrl-icon mapboxgl-ctrl-${type}`,\n      type: 'button',\n      title: label,\n      onClick: callback\n    });\n  }\n\n  _render() {\n    if (!this.state.showButton) {\n      return null;\n    }\n\n    const {className} = this.props;\n    const {isFullscreen} = this.state;\n\n    const type = isFullscreen ? 'shrink' : 'fullscreen';\n\n    return createElement(\n      'div',\n      {\n        className: `mapboxgl-ctrl mapboxgl-ctrl-group ${className}`,\n        ref: this._containerRef\n      },\n      [this._renderButton(type, 'Toggle fullscreen', this._onClickFullscreen)]\n    );\n  }\n}\n"],"file":"fullscreen-control.js"}