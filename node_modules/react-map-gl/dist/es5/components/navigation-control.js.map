{"version":3,"sources":["../../../src/components/navigation-control.js"],"names":["noop","propTypes","Object","assign","BaseControl","className","PropTypes","string","onViewStateChange","func","onViewportChange","showCompass","bool","showZoom","defaultProps","NavigationControl","props","_updateViewport","zoom","_context","viewport","bearing","pitch","opts","mapState","MapState","viewState","getViewportProps","LINEAR_TRANSITION_PROPS","style","transform","type","label","callback","children","key","title","onClick","ref","_containerRef","_renderButton","_onZoomIn","_onZoomOut","_onResetNorth","_renderCompass"],"mappings":"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","sourcesContent":["// @flow\nimport {createElement} from 'react';\nimport PropTypes from 'prop-types';\nimport BaseControl from './base-control';\n\nimport MapState from '../utils/map-state';\nimport {LINEAR_TRANSITION_PROPS} from '../utils/map-controller';\n\nimport deprecateWarn from '../utils/deprecate-warn';\n\nimport type {BaseControlProps} from './base-control';\n\nconst noop = () => {};\n\nconst propTypes = Object.assign({}, BaseControl.propTypes, {\n  // Custom className\n  className: PropTypes.string,\n  // Callbacks fired when the user interacted with the map. The object passed to the callbacks\n  // contains viewport properties such as `longitude`, `latitude`, `zoom` etc.\n  onViewStateChange: PropTypes.func,\n  onViewportChange: PropTypes.func,\n  // Show/hide compass button\n  showCompass: PropTypes.bool,\n  // Show/hide zoom buttons\n  showZoom: PropTypes.bool\n});\n\nconst defaultProps = Object.assign({}, BaseControl.defaultProps, {\n  className: '',\n  showCompass: true,\n  showZoom: true\n});\n\nexport type NavigationControlProps = BaseControlProps & {\n  className: string,\n  onViewStateChange?: Function,\n  onViewportChange?: Function,\n  showCompass: boolean,\n  showZoom: boolean\n};\n\ntype ViewportProps = {\n  longitude: number,\n  latitude: number,\n  zoom: number,\n  pitch: number,\n  bearing: number\n};\n\n/*\n * PureComponent doesn't update when context changes, so\n * implementing our own shouldComponentUpdate here.\n */\nexport default class NavigationControl extends BaseControl<\n  NavigationControlProps,\n  *,\n  HTMLDivElement\n> {\n  static propTypes = propTypes;\n  static defaultProps = defaultProps;\n\n  constructor(props: NavigationControlProps) {\n    super(props);\n    // Check for deprecated props\n    deprecateWarn(props);\n  }\n\n  _updateViewport(opts: $Shape<ViewportProps>) {\n    const {viewport} = this._context;\n    const mapState = new MapState(Object.assign({}, viewport, opts));\n    const viewState = Object.assign({}, mapState.getViewportProps(), LINEAR_TRANSITION_PROPS);\n\n    const onViewportChange = this.props.onViewportChange || this._context.onViewportChange || noop;\n    const onViewStateChange =\n      this.props.onViewStateChange || this._context.onViewStateChange || noop;\n\n    // Call new style callback\n    onViewStateChange({viewState});\n\n    // Call old style callback\n    onViewportChange(viewState);\n  }\n\n  _onZoomIn = () => {\n    this._updateViewport({zoom: this._context.viewport.zoom + 1});\n  };\n\n  _onZoomOut = () => {\n    this._updateViewport({zoom: this._context.viewport.zoom - 1});\n  };\n\n  _onResetNorth = () => {\n    this._updateViewport({bearing: 0, pitch: 0});\n  };\n\n  _renderCompass() {\n    const {bearing} = this._context.viewport;\n    return createElement('span', {\n      className: 'mapboxgl-ctrl-compass-arrow',\n      style: {transform: `rotate(${-bearing}deg)`}\n    });\n  }\n\n  _renderButton(type: string, label: string, callback: Function, children: any) {\n    return createElement('button', {\n      key: type,\n      className: `mapboxgl-ctrl-icon mapboxgl-ctrl-${type}`,\n      type: 'button',\n      title: label,\n      onClick: callback,\n      children\n    });\n  }\n\n  _render() {\n    const {className, showCompass, showZoom} = this.props;\n\n    return createElement(\n      'div',\n      {\n        className: `mapboxgl-ctrl mapboxgl-ctrl-group ${className}`,\n        ref: this._containerRef\n      },\n      [\n        showZoom && this._renderButton('zoom-in', 'Zoom In', this._onZoomIn),\n        showZoom && this._renderButton('zoom-out', 'Zoom Out', this._onZoomOut),\n        showCompass &&\n          this._renderButton('compass', 'Reset North', this._onResetNorth, this._renderCompass())\n      ]\n    );\n  }\n}\n"],"file":"navigation-control.js"}